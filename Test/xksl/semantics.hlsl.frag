
float3 compute(float3 f)
{
	return f;
}

void main()
{
	float3 f3 = compute(1.0);
}

//=========================================================================
//Glslang: HLSL --> SPV conversion
//D:\Prgms\glslang\source\Test\xksl\semantics.hlsl.frag -e main --keep-uncalled -D -V -H -o D:\Prgms\glslang\source\Test\xksl\outputs\semantics.hlsl.frag.spv

//SPV outputs
/*
// Module Version 10000
// Generated by (magic number): 80001
// Id's are bound by 61

                              Capability Shader
               1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Fragment 4  "main" 34 39 51 55 58
                              ExecutionMode 4 OriginUpperLeft
                              Source HLSL 500
                              Name 4  "main"
                              Name 8  "PS_IN"
                              MemberName 8(PS_IN) 0  "in_fragCoord1"
                              MemberName 8(PS_IN) 1  "in_fragCoord2"
                              MemberName 8(PS_IN) 2  "in_fragCoord3"
                              Name 10  "PS_OUT"
                              MemberName 10(PS_OUT) 0  "out_color"
                              MemberName 10(PS_OUT) 1  "out_depth"
                              MemberName 10(PS_OUT) 2  "out_depth2"
                              Name 13  "@main(struct-PS_IN-vf4-vf4-vf41;"
                              Name 12  "psin"
                              Name 16  "output"
                              Name 32  "psin"
                              Name 34  "psin_in_fragCoord1"
                              Name 37  "PS_IN"
                              MemberName 37(PS_IN) 0  "in_fragCoord2"
                              MemberName 37(PS_IN) 1  "in_fragCoord3"
                              Name 39  "psin"
                              Name 46  "flattenTemp"
                              Name 47  "param"
                              Name 51  "out_color"
                              Name 55  "out_depth"
                              Name 58  "out_depth2"
                              Decorate 34(psin_in_fragCoord1) BuiltIn FragCoord
                              Decorate 39(psin) Location 0
                              Decorate 51(out_color) Location 0
                              Decorate 55(out_depth) BuiltIn FragDepth
                              Decorate 58(out_depth2) Location 1
               2:             TypeVoid
               3:             TypeFunction 2
               6:             TypeFloat 32
               7:             TypeVector 6(float) 4
        8(PS_IN):             TypeStruct 7(fvec4) 7(fvec4) 7(fvec4)
               9:             TypePointer Function 8(PS_IN)
      10(PS_OUT):             TypeStruct 7(fvec4) 6(float) 6(float)
              11:             TypeFunction 10(PS_OUT) 9(ptr)
              15:             TypePointer Function 10(PS_OUT)
              17:             TypeInt 32 1
              18:     17(int) Constant 1
              19:    6(float) Constant 1065353216
              20:             TypePointer Function 6(float)
              22:     17(int) Constant 2
              24:     17(int) Constant 0
              25:             TypePointer Function 7(fvec4)
              33:             TypePointer Input 7(fvec4)
34(psin_in_fragCoord1):     33(ptr) Variable Input
       37(PS_IN):             TypeStruct 7(fvec4) 7(fvec4)
              38:             TypePointer Input 37(PS_IN)
        39(psin):     38(ptr) Variable Input
              50:             TypePointer Output 7(fvec4)
   51(out_color):     50(ptr) Variable Output
              54:             TypePointer Output 6(float)
   55(out_depth):     54(ptr) Variable Output
  58(out_depth2):     54(ptr) Variable Output
         4(main):           2 Function None 3
               5:             Label
        32(psin):      9(ptr) Variable Function
 46(flattenTemp):     15(ptr) Variable Function
       47(param):      9(ptr) Variable Function
              35:    7(fvec4) Load 34(psin_in_fragCoord1)
              36:     25(ptr) AccessChain 32(psin) 24
                              Store 36 35
              40:     33(ptr) AccessChain 39(psin) 24
              41:    7(fvec4) Load 40
              42:     25(ptr) AccessChain 32(psin) 18
                              Store 42 41
              43:     33(ptr) AccessChain 39(psin) 18
              44:    7(fvec4) Load 43
              45:     25(ptr) AccessChain 32(psin) 22
                              Store 45 44
              48:    8(PS_IN) Load 32(psin)
                              Store 47(param) 48
              49:  10(PS_OUT) FunctionCall 13(@main(struct-PS_IN-vf4-vf4-vf41;) 47(param)
                              Store 46(flattenTemp) 49
              52:     25(ptr) AccessChain 46(flattenTemp) 24
              53:    7(fvec4) Load 52
                              Store 51(out_color) 53
              56:     20(ptr) AccessChain 46(flattenTemp) 18
              57:    6(float) Load 56
                              Store 55(out_depth) 57
              59:     20(ptr) AccessChain 46(flattenTemp) 22
              60:    6(float) Load 59
                              Store 58(out_depth2) 60
                              Return
                              FunctionEnd
13(@main(struct-PS_IN-vf4-vf4-vf41;):  10(PS_OUT) Function None 11
        12(psin):      9(ptr) FunctionParameter
              14:             Label
      16(output):     15(ptr) Variable Function
              21:     20(ptr) AccessChain 16(output) 18
                              Store 21 19
              23:     20(ptr) AccessChain 16(output) 22
                              Store 23 19
              26:     25(ptr) AccessChain 12(psin) 24
              27:    7(fvec4) Load 26
              28:     25(ptr) AccessChain 16(output) 24
                              Store 28 27
              29:  10(PS_OUT) Load 16(output)
                              ReturnValue 29
                              FunctionEnd
*/

//=========================================================================
//SPIRV-Cross: SPV --> GLSL
//--output D:\Prgms\glslang\source\Test\xksl\outputs\semantics.hlsl.output.glsl D:\Prgms\glslang\source\Test\xksl\outputs\semantics.hlsl.frag.spv
/*
#version 450

struct PS_IN
{
    vec4 in_fragCoord;
};

struct PS_OUT
{
    vec4 out_color;
    float out_depth;
};

layout(location = 0) in PS_IN psin;
layout(location = 0) out vec4 out_color;
layout(location = 1) out float out_depth;

PS_OUT _main(PS_IN psin_1)
{
    PS_OUT _output;
    _output.out_depth = 1.0;
    _output.out_color = psin_1.in_fragCoord;
    return _output;
}

void main()
{
    PS_IN psin_1 = psin;
    PS_IN param = psin_1;
    PS_OUT flattenTemp = _main(param);
    out_color = flattenTemp.out_color;
    out_depth = flattenTemp.out_depth;
}

*/

//=========================================================================
//SPIRV-Cross: SPV --> HLSL
//--hlsl --output D:\Prgms\glslang\source\Test\xksl\outputs\semantics.hlsl.output.hlsl D:\Prgms\glslang\source\Test\xksl\outputs\semantics.hlsl.frag.spv
/*
struct PS_IN
{
    float4 in_fragCoord;
};

struct PS_OUT
{
    float4 out_color;
    float out_depth;
};

static PS_IN psin;
static float4 out_color;
static float out_depth;

struct SPIRV_Cross_Input
{
    PS_IN psin : TEXCOORD0;
};

struct SPIRV_Cross_Output
{
    float4 out_color : COLOR0;
    float out_depth : COLOR1;
};

PS_OUT _main(PS_IN psin_1)
{
    PS_OUT output;
    output.out_depth = 1.0f;
    output.out_color = psin_1.in_fragCoord;
    return output;
}

void frag_main()
{
    PS_IN psin_1 = psin;
    PS_IN param = psin_1;
    PS_OUT flattenTemp = _main(param);
    out_color = flattenTemp.out_color;
    out_depth = flattenTemp.out_depth;
}

SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
{
    psin = stage_input.psin;
    frag_main();
    SPIRV_Cross_Output stage_output;
    stage_output.out_color = out_color;
    stage_output.out_depth = out_depth;
    return stage_output;
}

*/