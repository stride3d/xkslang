
shader IStreamInitializer
{
	void ResetStream() {}
};

shader MaterialStream : IStreamInitializer
{
	stage stream float matBlend;
	
	override void ResetStream()
	{
		base.ResetStream();
		streams.matBlend = 0.0f;
	}
};

shader MaterialPixelStream : MaterialStream
{
	stage stream float3 matNormal;
}

shader IMaterialStreamBlend : MaterialStream, MaterialPixelStream
{
	void Compute(Streams fromStream)
	{
	}
}

shader ShaderMain: IMaterialStreamBlend
{
	stage stream float aNewStreamVariable;

	override void Compute(Streams fromStream)
	{
		var middleNormal = fromStream.matNormal + streams.matNormal;
		streams.matNormal =  streams.matBlend < 0.5 ? 
			  lerp(fromStream.matNormal, middleNormal, streams.matBlend / 0.5)
			: lerp(middleNormal, streams.matNormal, (streams.matBlend - 0.5) * 2);
	}
	
	void VSMain()
	{
		int toto = 0;
	}
}