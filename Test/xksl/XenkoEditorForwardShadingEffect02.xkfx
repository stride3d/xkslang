//Activate some additionnal options with xkslang main test program
//============================================
setSampleTestOptions automaticallyTryToLoadAndConvertUnknownMixinShader true
setSampleTestOptions processSampleWithXkfxLibrary true
//============================================

addResourcesLibrary "library"

setDefine SILICON_STUDIO_MULTISAMPLE_COUNT "1"
setDefine SILICONSTUDIO_XENKO_GRAPHICS_API_DIRECT3D "1"
setDefine SILICONSTUDIO_XENKO_GRAPHICS_API_DIRECT3D11 "1"
setDefine SILICONSTUDIO_XENKO_GRAPHICS_PROFILE "45056"
setDefine GRAPHICS_PROFILE_LEVEL_9_1 "37120"
setDefine GRAPHICS_PROFILE_LEVEL_9_2 "37376"
setDefine GRAPHICS_PROFILE_LEVEL_9_3 "37632"
setDefine GRAPHICS_PROFILE_LEVEL_10_0 "40960"
setDefine GRAPHICS_PROFILE_LEVEL_10_1 "41216"
setDefine GRAPHICS_PROFILE_LEVEL_11_0 "45056"
setDefine GRAPHICS_PROFILE_LEVEL_11_1 "45312"
setDefine GRAPHICS_PROFILE_LEVEL_11_2 "45568"
mixer _m
_m.mixin( ShaderBase, ShadingBase, TransformationBase, NormalStream, TransformationWAndVP, NormalFromMesh, MaterialSurfacePixelStageCompositor )

_m.addComposition( materialPixelStage = mixin(MaterialSurfaceArray[layers=[mixin(MaterialSurfaceSetStreamFromComputeColor<matEmissive,rgba>[computeColorSource=mixin(ComputeColorMultiply[color1=mixin(ComputeColorConstantColorLink<GridGizmoBase.GridColorKey>), color2=mixin(ComputeColorTextureScaledOffsetDynamicSampler<Texturing.Texture0,TEXCOORD0,Material.Sampler.i0,rgba,Material.TextureScale,Material.TextureOffset>)])]), mixin(MaterialSurfaceSetStreamFromComputeColor<matEmissiveIntensity,r>[computeColorSource=mixin(ComputeColorConstantFloatLink<Material.EmissiveIntensity>)]), mixin(MaterialSurfaceSetStreamFromComputeColor<matDiffuseSpecularAlphaBlend,r>[computeColorSource=mixin(ComputeColorConstantFloatLink<Material.DiffuseSpecularAlphaBlendValue>)]), mixin(MaterialSurfaceSetStreamFromComputeColor<matAlphaBlendColor,rgb>[computeColorSource=mixin(ComputeColorConstantColorLink<Material.AlphaBlendColorValue>)]), mixin(MaterialSurfaceEmissiveShading<true>), mixin(MaterialSurfaceDiffuseSpecularAlphaBlendColor)]]) )
_m.addComposition( streamInitializerPixelStage = mixin({MaterialStream, MaterialPixelShadingStream}) )

_m.compile()
