#version 450

layout(location = 0) in vec4 in_aVec4;
layout(location = 1) in float in_aFloat;

layout(location = 0) out vec4 out_Color;
layout(location = 1) out float out_Depth;

void main()
{
    vec4 aVec4 = in_aVec4;
	float f = in_aFloat;
	
    out_Color = aVec4;
    out_Depth = 1.0;
}

/*
#version 140

//PIXEL SHADER
void main()
{
	//fragment shader inputs
	vec4 aVec4 = gl_FragCoord;
	//float frontFacing = gl_FrontFacing? 0:1;
	
	//fragment shader outputs
	gl_FragColor = aVec4;
	gl_FragDepth = 1.0;
	//gl_FragData[0] = vec4(0.0);  //can use either gl_FragColor or gl_FragData

	//pixel shader input
	//vec4 fragCoord = gl_FragCoord;
	//bool b = gl_FrontFacing;          //Unsupported builtin in HLSL: builtInFrontFacing
	//vec2 pointCoord = gl_PointCoord;  //Unsupported builtin in HLSL: builtInPointCoord
}*/
/*
#version 140

//PIXEL SHADER
void main()
{
	//fragment shader inputs
	vec4 aVec4 = gl_FragCoord;
	
	//fragment shader outputs
	gl_FragColor = aVec4;
	gl_FragDepth = 1.0;
}
*/
//=========================================================================
//Glslang: GLSL --> SPV conversion
//D:\Prgms\glslang\source\Test\xksl\semantics.glsl.frag -e main --keep-uncalled -V -H -o D:\Prgms\glslang\source\Test\xksl\outputs\semantics.glsl.frag.spv

//SPV outputs
/*
// Module Version 10000
// Generated by (magic number): 80001
// Id's are bound by 19

                              Capability Shader
               1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Fragment 4  "main" 11 14 17
                              ExecutionMode 4 OriginUpperLeft
                              ExecutionMode 4 DepthReplacing
                              Source GLSL 140
                              Name 4  "main"
                              Name 9  "aVec4"
                              Name 11  "gl_FragCoord"
                              Name 14  "gl_FragColor"
                              Name 17  "gl_FragDepth"
                              Decorate 11(gl_FragCoord) BuiltIn FragCoord
                              Decorate 17(gl_FragDepth) BuiltIn FragDepth
               2:             TypeVoid
               3:             TypeFunction 2
               6:             TypeFloat 32
               7:             TypeVector 6(float) 4
               8:             TypePointer Function 7(fvec4)
              10:             TypePointer Input 7(fvec4)
11(gl_FragCoord):     10(ptr) Variable Input
              13:             TypePointer Output 7(fvec4)
14(gl_FragColor):     13(ptr) Variable Output
              16:             TypePointer Output 6(float)
17(gl_FragDepth):     16(ptr) Variable Output
              18:    6(float) Constant 1065353216
         4(main):           2 Function None 3
               5:             Label
        9(aVec4):      8(ptr) Variable Function
              12:    7(fvec4) Load 11(gl_FragCoord)
                              Store 9(aVec4) 12
              15:    7(fvec4) Load 9(aVec4)
                              Store 14(gl_FragColor) 15
                              Store 17(gl_FragDepth) 18
                              Return
                              FunctionEnd
*/

//=========================================================================
//SPIRV-Cross: SPV --> GLSL
//--output D:\Prgms\glslang\source\Test\xksl\outputs\semantics.glsl.output.glsl D:\Prgms\glslang\source\Test\xksl\outputs\semantics.glsl.frag.spv
/*

#version 140
#ifdef GL_ARB_shading_language_420pack
#extension GL_ARB_shading_language_420pack : require
#endif

out vec4 _gl_FragColor;

void main()
{
    vec4 aVec4 = gl_FragCoord;
    _gl_FragColor = aVec4;
    gl_FragDepth = 1.0;
}

*/

//=========================================================================
//SPIRV-Cross: SPV --> HLSL
//--hlsl --output D:\Prgms\glslang\source\Test\xksl\outputs\semantics.glsl.output.hlsl D:\Prgms\glslang\source\Test\xksl\outputs\semantics.glsl.frag.spv
/*

static float4 gl_FragCoord;
static float gl_FragDepth;
static float4 gl_FragColor;

struct SPIRV_Cross_Input
{
    float4 gl_FragCoord : VPOS;
};

struct SPIRV_Cross_Output
{
    float4 gl_FragColor : COLOR0;
    float gl_FragDepth : DEPTH;
};

void frag_main()
{
    float4 aVec4 = gl_FragCoord;
    gl_FragColor = aVec4;
    gl_FragDepth = 1.0f;
}

SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
{
    gl_FragCoord = stage_input.gl_FragCoord + float4(0.5f, 0.5f, 0.0f, 0.0f);
    frag_main();
    SPIRV_Cross_Output stage_output;
    stage_output.gl_FragDepth = gl_FragDepth;
    stage_output.gl_FragColor = gl_FragColor;
    return stage_output;
}

*/